import{m as v}from"./matrixState.DeZ8y74b.js";function R(e,t={pointRadius:5,spacing:25,backgroundColor:"#f8f9fa",pointColor:"#007bff",padding:10,character:"",makeSelectable:!0}){if(!e||!Array.isArray(e)||e.length===0)throw new Error("La matriz debe ser un array bidimensional válido");const n=e.length,s=e[0].length;if(!e.every(d=>Array.isArray(d)&&d.length===s))throw new Error("Todas las filas de la matriz deben tener la misma longitud");const a=(s-1)*t.spacing+t.pointRadius*2,c=(n-1)*t.spacing+t.pointRadius*2,r=a+t.padding*2,u=c+t.padding*2;let l=[];l.push(`<rect width="${r}" height="${u}" fill="${t.backgroundColor}"/>`),t.makeSelectable&&t.character&&l.push(`<text x="${r/2}" y="${u/2}" 
          font-size="1" 
          fill="transparent" 
          text-anchor="middle" 
          dominant-baseline="middle" 
          style="user-select: text; -webkit-user-select: text; -moz-user-select: text; -ms-user-select: text;"
          >${t.character}</text>`);for(let d=0;d<n;d++)for(let o=0;o<s;o++)if(e[d][o]===1){const m=t.padding+t.pointRadius+o*t.spacing,i=t.padding+t.pointRadius+d*t.spacing;l.push(`<circle cx="${m}" cy="${i}" r="${t.pointRadius}" fill="${t.pointColor}"/>`)}return`<svg width="${r}" height="${u}" xmlns="http://www.w3.org/2000/svg">
        ${l.join(`
    `)}
      </svg>`}function g(e,t){if(!t.forFont)return R(e,t);const n={unitsPerEm:t.unitsPerEm||1e3,advanceWidth:t.advanceWidth||600,...t};if(!e||!Array.isArray(e)||e.length===0)throw new Error("La matriz debe ser un array bidimensional válido");const s=e.length,a=e[0].length;if(!e.every(i=>Array.isArray(i)&&i.length===a))throw new Error("Todas las filas de la matriz deben tener la misma longitud");const c=(a-1)*t.spacing+t.pointRadius*2,r=(s-1)*t.spacing+t.pointRadius*2,u=c+t.padding*2,l=r+t.padding*2,h=n.advanceWidth/u,d=n.unitsPerEm/l;let o=[];for(let i=0;i<s;i++)for(let p=0;p<a;p++)if(e[i][p]===1){const y=t.padding+t.pointRadius+p*t.spacing,w=t.padding+t.pointRadius+i*t.spacing,$=y*h,E=n.unitsPerEm-w*d;o.push(`<circle cx="${$}" cy="${E}" r="${t.pointRadius*Math.min(h,d)}" fill="${t.pointColor}"/>`)}return`<svg width="${n.advanceWidth}" height="${n.unitsPerEm}" viewBox="0 0 ${n.advanceWidth} ${n.unitsPerEm}" xmlns="http://www.w3.org/2000/svg">
      ${o.join(`
    `)}
    </svg>`}const C=[[0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0],[0,0,1,1,1,1,1,1,1,0,0],[0,1,1,1,1,1,1,1,1,1,0],[1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,0,0,0,1,1,1,1],[0,0,0,0,0,0,0,1,1,1,1],[0,0,1,1,1,1,1,1,1,1,1],[0,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,0,0,0,1,1,1,1],[1,1,1,1,0,0,0,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1],[0,1,1,1,1,1,1,1,1,1,1],[0,0,1,1,1,1,0,1,1,1,1]],A=[[1,1,1,1,0,0,0,0,0,0,0],[1,1,1,1,0,0,0,0,0,0,0],[1,1,1,1,0,0,0,0,0,0,0],[1,1,1,1,0,0,0,0,0,0,0],[1,1,1,1,1,1,1,1,1,0,0],[1,1,1,1,1,1,1,1,1,1,0],[1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,0,0,0,1,1,1,1],[1,1,1,1,0,0,0,1,1,1,1],[1,1,1,1,0,0,0,1,1,1,1],[1,1,1,1,0,0,0,1,1,1,1],[1,1,1,1,0,0,0,1,1,1,1],[1,1,1,1,0,0,0,1,1,1,1],[1,1,1,1,0,0,0,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,0],[1,1,1,1,1,1,1,1,1,0,0]],b={a:C,b:A};document.addEventListener("astro:page-load",()=>{v.set(Array(17).fill(null).map(()=>Array(11).fill(0)));const e={pointRadius:8,pointColor:"#000",backgroundColor:"transparent",padding:10,spacing:20,character:"a",makeSelectable:!0};v.subscribe(c=>{let r=document.getElementById("svg-c");r||(r=document.createElement("div"),r.id="svg-c",document.body.appendChild(r)),r.innerHTML=g(c,{...e,makeSelectable:!0})});const t=g(b.a,e),n=g(b.b,{...e,character:"b"});let s=document.getElementById("svg-a"),a=document.getElementById("svg-b");(!s||!a)&&(s=document.createElement("div"),a=document.createElement("div"),s.id="svg-a",a.id="svg-b",document.body.appendChild(s),document.body.appendChild(a)),s.innerHTML=t,a.innerHTML=n});
